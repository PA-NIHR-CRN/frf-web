name: FRF E2E Tests
on:
  schedule:
  # Run at 08:00 (UTC) Mon-Fri (09:00 during BST)
  - cron: '0 08 * * 1-5'
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:
    inputs:
      env-context:
        description: "Select which environment you want to run the tests in
          Accepts dev or test"
        options: ["dev", "test"]
        required: true
        default: "test"

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright
      run: npx playwright install --with-deps

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_ID }}
        aws-secret-access-key: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_SECRET }}
        aws-region: eu-west-2
      
    - name: Add Github Actions IP to LB security group
      if: github.event.inputs.env-context == 'dev'
      run: |
          aws ec2 authorize-security-group-ingress --${{ secrets.LB_SG_DEV }} --ip-permissions '[{"IpProtocol": "tcp", "FromPort": 443, "ToPort": 443, "IpRanges": [{"CidrIp": "${{ steps.ip.outputs.ipv4 }}/32", "Description": "GitHub runner IP for FRF automation test run"}]}]'

    - name: Run FRF E2E Tests in DEV
      if: github.event.inputs.env-context == 'dev'
      run: npx playwright test
      env:
        ENV_CONTEXT: "DEV"
    - name: Run FRF E2E Tests in TEST
      if: github.event.inputs.env-context == '' || github.event.inputs.env-context == 'test'
      run: npx playwright test
      env:
        ENV_CONTEXT: "TEST"

    - name: Remove Github Actions IP from LB security group
      if: github.event.inputs.env-context == 'dev'
      run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.LB_SG_DEV }} --ip-permissions '[{"IpProtocol": "tcp", "FromPort": 443, "ToPort": 443, "IpRanges": [{"CidrIp": "${{ steps.ip.outputs.ipv4 }}/32", "Description": "GitHub runner IP for FRF automation test run"}]}]'

    - name: Upload HTML Report as artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-report
        path: qa/test-report/
        retention-days: 3